// <auto-generated />
using DesafioDotNet.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DesafioDotNet.Migrations
{
    [DbContext(typeof(DesafioDotNetContext))]
    partial class DesafioDotNetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DesafioDotNet.Models.Challenge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChallengeType");

                    b.Property<bool>("Done");

                    b.Property<DateTime?>("EndTime");

                    b.Property<string>("FileName");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Id");

                    b.ToTable("Challenges");
                });

            modelBuilder.Entity("DesafioDotNet.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ChallengeId");

                    b.Property<bool>("Done");

                    b.Property<string>("ErrorMessage");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsCorrect");

                    b.Property<string>("Output");

                    b.HasKey("Id");

                    b.HasIndex("ChallengeId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("DesafioDotNet.Models.Result", b =>
                {
                    b.HasOne("DesafioDotNet.Models.Challenge", "Challenge")
                        .WithMany("Results")
                        .HasForeignKey("ChallengeId");
                });
#pragma warning restore 612, 618
        }
    }
}
